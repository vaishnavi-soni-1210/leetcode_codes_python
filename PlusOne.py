import math
from pickletools import int4
from numpy import int64, longdouble
class Solution(object):
    def plusOne(self, digits):
        """
        :type digits: List[int]
        :rtype: List[int]
        """
        plusOneArray = []
        number = 0
        multiplier = len(digits)-1
        for num in digits:
            #print(num)
            #print(multiplier)
            #if(multiplier == 9):
                #print('number is:%d' %number)
            number = number + (num * int(math.pow(10,multiplier)))
            #print(number + (num * math.pow(10,multiplier)))
            #print(number)
            multiplier = multiplier - 1

        #number has the number generated by digits
        #print(number)

        plusOneNumber = number + 1
        #print(plusOneNumber)

        #as integer data type is not iterable, convert it into string
        plusOneNumberString = str(plusOneNumber)
        
        #now prepare array of plusOneNumber
        for num in plusOneNumberString:
            plusOneArray.append(int(num))

        return plusOneArray
        
obj = Solution()
#digits = [5,3,4,2,1]
digits = [6,1,4,5,3,9,0,1,9,5,1,8,6,7,0,5,5,4,3]
plusOneArray = obj.plusOne(digits)
print(plusOneArray)

# failing test cases (on leetcode) has more than 10 digits in the digits array, therefore converting it into int is creating problem